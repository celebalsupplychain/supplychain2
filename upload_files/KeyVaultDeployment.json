{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "SubscriptionID": {
      "type": "string"
    },
    "TenantID": {
      "type": "string"
    },
    "ClientID": {
      "type": "string"
    },
    "ClientSecret": {
      "type": "securestring"
    },
    "DataFactoryName": {
      "type": "string"
    },
    "StorageAccountName": {
      "type": "string"
    },
    "StorageAccessKey": {
      "type": "securestring"
    },
    "StorageConnectionString": {
      "type": "securestring"
    },
    "SQLServerName": {
      "type": "string"
    },
    "SQLUsername": {
      "type": "string"
    },
    "SQLPassword": {
      "type": "securestring"
    },
    "SQLConnectionString": {
      "type": "securestring"
    },
    "SQLDatabaseName": {
      "type": "string"
    },
    "DatabricksName": {
      "type": "string"
    },
    "DataBricksWorkspaceURL": {
      "type": "string"
    },
    "DataBricksToken": {
      "type": "securestring"
    },
    "DataBricksScope":{
      "type": "securestring"
    },
    "PowerBIEmbeddedName": {
      "type": "string"
    },
    "PowerBIEmbeddedAdmin": {
      "type": "string"
    },
    "AppServiceName": {
      "type": "string"
    },
    "AppServiceURL": {
      "type": "string"
    },
    "AzureFunctionURL": {
      "type": "string"
    },
    "KeyVaultName": {
      "type": "string"
    },
    "KeyVaultLocation": {
      "type": "string"
    },
    "ResourceGroupName": {
      "type": "string"
    },
    "ResourceGroupLocation": {
      "type": "string"
    }
  },
  "variables": {
    "secretsPermissions": [
      "Get",
      "List",
      "Set",
      "Delete",
      "Recover",
      "Backup",
      "Restore"
    ],
    "keysPermissions": [
      "Get",
      "List",
      "Update",
      "Create",
      "Import",
      "Delete",
      "Recover",
      "Backup",
      "Restore"
    ],
    "enabledForTemplateDeployment": true,
    "enabledForDiskEncryption": false,
    "enabledForDeployment": true
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('KeyVaultName')]",
      "location": "[parameters('KeyVaultLocation')]",
      "apiVersion": "2018-02-14",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[variables('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[variables('enabledForTemplateDeployment')]",
        "enabledForDiskEncryption": "[variables('enabledForDiskEncryption')]",
        "tenantId": "[parameters('TenantId')]",
        "accessPolicies": [
          {
            "objectId": "[parameters('ClientID')]",
            "tenantId": "[parameters('TenantID')]",
            "permissions": {
              "keys": "[variables('keysPermissions')]",
              "secrets": "[variables('secretsPermissions')]"
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SubscriptionID')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SubscriptionID')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','TenantID')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('TenantID')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','ClientID')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('ClientID')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','ClientSecret')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('ClientSecret')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','DataFactoryName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('DataFactoryName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','StorageAccountName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('StorageAccountName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','StorageAccessKey')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('StorageAccessKey')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','StorageConnectionString')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('StorageConnectionString')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SQLServerName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SQLServerName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SQLUsername')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SQLUsername')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SQLPassword')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SQLPassword')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SQLConnectionString')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SQLConnectionString')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','SQLDatabaseName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('SQLDatabaseName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','DatabricksName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('DatabricksName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','DataBricksWorkspaceURL')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('DataBricksWorkspaceURL')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','DataBricksToken')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('DataBricksToken')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','DataBricksScope')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('DataBricksScope')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','PowerBIEmbeddedName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('PowerBIEmbeddedName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','PowerBIEmbeddedAdmin')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('PowerBIEmbeddedAdmin')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','AppServiceName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('AppServiceName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','AppServiceURL')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('AppServiceURL')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','AzureFunctionURL')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('AzureFunctionURL')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','ResourceGroupName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('ResourceGroupName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/','ResourceGroupLocation')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('ResourceGroupLocation')]"
      }
    }
  ]
}
