{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DataFactoryName": {
      "type": "string"
    },
    "DataFactoryLocation": {
      "type": "string",
      "allowedValues": [
        "Australia East",
        "Brazil South",
        "Canada Central",
        "Central India",
        "Central US",
        "East US",
        "East US 2",
        "France Central",
        "Japan East",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "UK South",
        "West Central US",
        "West Europe",
        "West US",
        "West US 2"
      ]
    },
    "StorageConnectionString": {
      "type": "string"
    },
    "SQLConnectionString": {
      "type": "securestring"
    },
    "AzureFunctionURL": {
      "type": "string"
    },
    "Sources": {
      "type": "string",
      "allowedValues": [
        "BigQuery",
        "SalesForce",
        "SAP",
        "Oracle",
        "Blob"
      ]
    },
    "SalesForceUsername": {
      "type": "string",
      "defaultValue": ""
    },
    "SalesForcePassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "SalesForceToken": {
      "type": "securestring",
      "defaultValue": ""
    },
    "SalesForceTables": {
      "type": "array",
      "defaultValue": [
        {
          "objects_label": "Accounts",
          "objects_name": "Account"
        },
        {
          "objects_label": "Contacts",
          "objects_name": "Contact"
        }
      ]
    },
    "SAPServer": {
      "type": "string",
      "defaultValue": ""
    },
    "SAPUsername": {
      "type": "string",
      "defaultValue": ""
    },
    "SAPPassword": {
      "type": "string",
      "defaultValue": ""
    },
    "SAPTables": {
      "type": "array",
      "defaultValue": [
        {
          "table_schema": "SAPHANADB",
          "table_name": "USR02"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "RSPCPROCESSLOG"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "EKKO"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "VBAK"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "EKPO"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "KNA1"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "TNAPR"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "LFA1"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "S066"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "RSPCCHAIN"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "DBCON"
        },
        {
          "table_schema": "SAPHANADB",
          "table_name": "MAKT"
        }
      ]
    },
    "BlobTable":{
    "type": "array",
    "defaultValue": [
    {
    "table_name": "Account"
    },
    {
    "table_name": "Contact"
    }
    ]
    }
  },


  "variables": {
    "api-version": "2018-06-01",
    "integrationrt": "SelfHostedIntegratnRuntime",
    "SALinkedService": "StorageAccountLS",
    "SADS": "StorageAccountDS",
    "SADSStaging": "SADSStaging",
    "SQLDBLinkedService": "SQLDBLS",
    "SQLDBDataset": "SQLDBDSSF",
    "SQLDBDateDS": "SQLDBDateDS",
    "SQLDBStagingDS": "SQLDBStagingDS",
    "SQLDBMainDS": "SQLDBMainDS",
    "SalesForceLinkedService": "SFLS",
    "SalesForceDS": "SFDS",
    "SalesForcePipeline": "SalesForcePipeline",
    "SAPLinkedService": "SAPLS",
    "SAPDataSet": "SAPDS",
    "SAPPipeline": "SAPPipeline"
  },

  "resources": [
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "[variables('api-version')]",
      "name": "[parameters('DataFactoryName')]",
      "location": "[parameters('DataFactoryLocation')]",
      "resources": [
        {
          "type": "linkedservices",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SQLDBLinkedService')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]"
          ],
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": {
                "type": "SecureString",
                "value": "[parameters('SQLConnectionString')]"
              }
            }
          }
        },

        {
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SQLDBDataset')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SQLDBLinkedService')]"
          ],
          "properties": {
            "type": "AzureSqlTable",
            "linkedServiceName": {
              "referenceName": "[variables('SQLDBLinkedService')]",
              "type": "LinkedServiceReference"
            },
            "schema": [],
            "parameters": {
              "tablelist": {
                "type": "array"
              }
            },
            "typeProperties": {
              "tableName": {
                "value": "@dataset().tablelist",
                "type": "Expression"
              }
            }
          }
        },
        {
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SQLDBMainDS')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SQLDBLinkedService')]"
          ],
          "properties": {
            "type": "AzureSqlTable",
            "linkedServiceName": {
              "referenceName": "[variables('SQLDBLinkedService')]",
              "type": "LinkedServiceReference"
            },
            "schema": [],
            "parameters": {
              "Main_table": {
                "type": "string"
              }
            },
            "typeProperties": {
              "tableName": {
                "value": "@dataset().Main_table",
                "type": "Expression"
              }
            }
          }
        },
        {
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SQLDBDateDS')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SQLDBLinkedService')]"
          ],
          "properties": {
            "type": "AzureSqlTable",
            "linkedServiceName": {
              "referenceName": "[variables('SQLDBLinkedService')]",
              "type": "LinkedServiceReference"
            },
            "schema": [],
            "parameters": {
              "Date_Table": {
                "type": "string"
              }
            },
            "typeProperties": {
              "tableName": {
                "value": "@dataset().Date_Table",
                "type": "Expression"
              }
            }
          }
        },
        {
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SQLDBStagingDS')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SQLDBLinkedService')]"
          ],
          "properties": {
            "type": "AzureSqlTable",
            "linkedServiceName": {
              "referenceName": "[variables('SQLDBLinkedService')]",
              "type": "LinkedServiceReference"
            },
            "schema": [],
            "parameters": {
              "Staging_Table": {
                "type": "string"
              }
            },
            "typeProperties": {
              "tableName": {
                "value": "@dataset().Staging_Table",
                "type": "Expression"
              }
            }
          }
        },
        {
          "type": "linkedservices",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SALinkedService')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]"
          ],
          "properties": {
            "type": "AzureBlobStorage",
            "description": "Azure Storage linked service",
            "typeProperties": {
              "connectionString": {
                "type": "SecureString",
                "value": "[parameters('StorageConnectionString')]"
              }
            }
          }
        },
        {
          "name": "[variables('SADS')]",
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SALinkedService')]"
          ],
          "properties": {
            "linkedServiceName": {
              "referenceName": "[variables('SALinkedService')]",
              "type": "LinkedServiceReference"
            },
            "parameters": {
              "sinkfilename": {
                "type": "array"
              }
            },
            "annotations": [],
            "type": "DelimitedText",
            "typeProperties": {
              "location": {
                "type": "AzureBlobStorageLocation",
                "fileName": {
                  "value": "@dataset().sinkfilename",
                  "type": "Expression"
                },
                "container": "marketplace"
              },
              "columnDelimiter": ",",
              "escapeChar": "\\",
              "firstRowAsHeader": true,
              "quoteChar": "\""
            },
            "schema": []
          }
        },
        {
          "name": "[variables('SADSStaging')]",
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SALinkedService')]"
          ],
          "properties": {
            "linkedServiceName": {
              "referenceName": "[variables('SALinkedService')]",
              "type": "LinkedServiceReference"
            },
            "parameters": {
              "Staging_Blob": {
                "type": "string"
              }
            },
            "annotations": [],
            "type": "DelimitedText",
            "typeProperties": {
              "location": {
                "type": "AzureBlobStorageLocation",
                "fileName": {
                  "value": "@dataset().Staging_Blob",
                  "type": "Expression"
                },
                "container": "marketplace"
              },
              "columnDelimiter": ",",
              "escapeChar": "\\",
              "firstRowAsHeader": true,
              "quoteChar": "\""
            },
            "schema": []
          }
        },
        {
          "condition": "[equals(parameters('Sources'),'SAP')]",
          "type": "linkedservices",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SAPLinkedService')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]"
          ],
          "properties": {
            "type": "SapHana",
            "typeProperties": {
              "server": "[parameters('SAPServer')]",
              "authenticationType": "Basic",
              "userName": "[parameters('SAPUsername')]",
              "password": {
                "type": "SecureString",
                "value": "[parameters('SAPPassword')]"
              }
            },
            "connectVia": {
              "referenceName": "[variables('integrationrt')]",
              "type": "IntegrationRuntimeReference"
            }
          }
        },
        {
          "condition": "[equals(parameters('Sources'),'SAP')]",
          "name": "[variables('SAPDataSet')]",
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]",
            "[variables('SAPLinkedService')]"
          ],
          "properties": {
            "type": "RelationalTable",
            "linkedServiceName": {
              "referenceName": "[variables('SAPLinkedService')]",
              "type": "LinkedServiceReference"
            },
            "typeProperties": {}
          }
        },
        {
          "condition": "[equals(parameters('Sources'),'SAP')]",
          "type": "pipelines",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SAPPipeline')]",
          "dependsOn": [
            "[parameters('DataFactoryName')]",
            "[variables('SALinkedService')]",
            "[variables('SADS')]",
            "[variables('SAPLinkedService')]",
            "[variables('SAPDataSet')]",
            "[variables('SQLDBLinkedService')]",
            "[variables('SQLDBDataset')]"

          ],
          "properties": {
            "activities": [
              {
                "name": "SAPForEachActivity",
                "type": "ForEach",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                  "items": {
                    "value": "@pipeline().parameters.SAPtablelist",
                    "type": "Expression"
                  },
                  "isSequential": true,
                  "activities": [
                    {
                      "name": "SAPtoBlob",
                      "type": "Copy",
                      "dependsOn": [],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "RelationalSource",
                          "query": {
                            "value": "SELECT * FROM @{item().table_schema}.@{item().table_name}",
                            "type": "Expression"
                          }
                        },
                        "sink": {
                          "type": "DelimitedTextSink",
                          "storeSettings": {
                            "type": "AzureBlobStorageWriteSetting"
                          },
                          "formatSettings": {
                            "type": "DelimitedTextWriteSetting",
                            "quoteAllText": true,
                            "fileExtension": ".csv"
                          }
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SAPDataSet')]",
                          "type": "DatasetReference"
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SADS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "sinkfilename": {
                              "value": "@{item().table_schema}_@{item().table_name}.csv",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "name": "ImportSchematoSA",
                      "type": "WebActivity",
                      "dependsOn": [
                        {
                          "activity": "SAPtoBlob",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "url": "[parameters('AzureFunctionURL')]",
                        "method": "POST",
                        "body": {
                          "value": "[concat('{\n\"blob_con_string\":\"',parameters('StorageConnectionString'),'\",\n\"sql_con_string\":\"',parameters('SQLConnectionString'),'\",\n \"filename\": \"@{item().table_schema}_@{item().table_name}.csv\",\n \"containerName\": \"marketplace\",\n \"tablename\": \"[@{item().table_schema}_@{item().table_name}]\"\n}')]",
                          "type": "Expression"
                        },
                        "datasets": [
                          {
                            "referenceName": "[variables('SADS')]",
                            "type": "DatasetReference",
                            "parameters": {
                              "sinkfilename": {
                                "value": "@{item().table_schema}_@{item().table_name}.csv",
                                "type": "Expression"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "BlobtoSQL",
                      "type": "Copy",
                      "dependsOn": [
                        {
                          "activity": "ImportSchematoSA",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "DelimitedTextSource",
                          "storeSettings": {
                            "type": "AzureBlobStorageReadSetting",
                            "recursive": false,
                            "enablePartitionDiscovery": false
                          },
                          "formatSettings": {
                            "type": "DelimitedTextReadSetting"
                          }
                        },
                        "sink": {
                          "type": "AzureSqlSink"
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SADS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "sinkfilename": {
                              "value": "@{item().table_schema}_@{item().table_name}.csv",
                              "type": "Expression"
                            }
                          }
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SQLDBDataset')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "tablelist": {
                              "value": "dbo.[@{item().table_schema}_@{item().table_name}]",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "parameters": {
              "SAPtablelist": {
                "type": "array",
                "defaultValue": "[parameters('SAPTables')]"
              }
            },
            "annotations": []
          }
        },

        {
          "condition": "[equals(parameters('Sources'),'SalesForce')]",
          "type": "linkedservices",
          "apiVersion": "2017-09-01-preview",
          "name": "[variables('SalesForceLinkedService')]",
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories',parameters('DataFactoryName'))]"
          ],
          "properties": {
            "type": "Salesforce",
            "description": "Salesforce linked service",
            "typeProperties": {
              "username": "[parameters('SalesForceUsername')]",
              "password": "[parameters('SalesForcePassword')]",
              "securityToken": "[parameters('SalesForceToken')]"
            }
          }
        },
        {
          "condition": "[equals(parameters('Sources'),'SalesForce')]",
          "type": "datasets",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SalesForceDS')]",
          "dependsOn": [
            "[parameters('DataFactoryName')]",
            "[variables('SalesForceLinkedService')]"
          ],
          "properties": {
            "type": "SalesforceObject",
            "typeProperties": {
              "objectApiName": "Contact"
            },
            "linkedServiceName": {
              "referenceName": "[variables('SalesForceLinkedService')]",
              "type": "LinkedServiceReference"
            }
          }
        },

        {
          "condition": "[equals(parameters('Sources'),'SalesForce')]",
          "type": "pipelines",
          "apiVersion": "[variables('api-version')]",
          "name": "[variables('SalesForcePipeline')]",
          "dependsOn": [
            "[parameters('DataFactoryName')]",
            "[variables('SALinkedService')]",
            "[variables('SADS')]",
            "[variables('SalesForceLinkedService')]",
            "[variables('SalesForceDS')]",
            "[variables('SQLDBLinkedService')]",
            "[variables('SQLDBDataset')]"

          ],
          "properties": {
            "activities": [
              {
                "name": "SFForEachActivity",
                "type": "ForEach",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                  "items": {
                    "value": "@pipeline().parameters.SFtablelist",
                    "type": "Expression"
                  },
                  "isSequential": true,
                  "activities": [
                    {
                      "name": "SalesForcetoBlob",
                      "type": "Copy",
                      "dependsOn": [],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "SalesforceSource",
                          "query": {
                            "value": "SELECT * FROM @{item().objects_name}",
                            "type": "Expression"
                          }
                        },
                        "sink": {
                          "type": "DelimitedTextSink",
                          "storeSettings": {
                            "type": "AzureBlobStorageWriteSetting"
                          },
                          "formatSettings": {
                            "type": "DelimitedTextWriteSetting",
                            "quoteAllText": true,
                            "fileExtension": ".csv"
                          }
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SalesForceDS')]",
                          "type": "DatasetReference",
                          "parameters": {}
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SADS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "sinkfilename": {
                              "value": "@{item().objects_name}.csv",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "name": "WebActimportschema",
                      "type": "WebActivity",
                      "dependsOn": [
                        {
                          "activity": "SalesForcetoBlob",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "url": "[parameters('AzureFunctionURL')]",
                        "method": "POST",
                        "headers": {},
                        "body": {
                          "value": "[concat('{\n\"blob_con_string\":\"',parameters('StorageConnectionString'),'\",\n\"sql_con_string\":\"',parameters('SQLConnectionString'),'\",\n \"filename\": \"@{item().objects_name}.csv\",\n \"containerName\": \"marketplace\",\n \"tablename\": \"[@{item().objects_name}]\"\n}')]",
                          "type": "Expression"
                        },
                        "linkedServices": [],
                        "datasets": [
                          {
                            "referenceName": "[variables('SADS')]",
                            "type": "DatasetReference",
                            "parameters": {
                              "sinkfilename": "@{item().objects_name}.csv",
                              "type": "Expression"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "BlobtoSQLDB",
                      "type": "Copy",
                      "dependsOn": [
                        {
                          "activity": "WebActimportschema",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "DelimitedTextSource",
                          "storeSettings": {
                            "type": "AzureBlobStorageReadSetting",
                            "recursive": false,
                            "enablePartitionDiscovery": false
                          },
                          "formatSettings": {
                            "type": "DelimitedTextReadSetting"
                          }
                        },
                        "sink": {
                          "type": "AzureSqlSink"
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SADS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "sinkfilename": {
                              "value": "@{item().objects_name}.csv",
                              "type": "Expression"
                            }
                          }
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SQLDBDataset')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "tablelist": {
                              "value": "dbo.[@{item().objects_name}]",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "parameters": {
              "SFtablelist": {
                "type": "array",
                "defaultValue": "[parameters('SalesForceTables')]"
              }
            },
            "annotations": []
          }

        },
        
        {
         "condition": "[equals(parameters('Sources'),'Blob')]",
          "name": "CopyPipelineFromBlob",
          "type": "pipelines",
          "apiVersion": "[variables('api-version')]",
          "dependsOn": [
            "[parameters('DataFactoryName')]",
            "[variables('SALinkedService')]",
            "[variables('SADS')]",
            "[variables('SQLDBLinkedService')]",
            "[variables('SQLDBDataset')]"
          ],
          "properties": {
            "activities": [
                {
                "name": "ForEach",
                "type": "ForEach",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                "items": {
                "value": "@pipeline().parameters.Table",
                "type": "Expression"
                },
                "isSequential": true,
            "activities": [
              {
                "name": "ImportSchema",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "url": "[parameters('AzureFunctionURL')]",
                  "method": "POST",
                  "headers": {},
                  "body": {
                    "value": "[concat('{\n\"blob_con_string\":\"',parameters('StorageConnectionString'),'\",\n\"sql_con_string\":\"',parameters('SQLConnectionString'),'\",\n \"filename\": \"@{item().table_name}.csv\",\n \"containerName\": \"marketplace\",\n \"tablename\": \"[@{item().table_name}]\"\n}')]",
                    "type": "Expression"
                  },
                  "datasets": [
                    {
                      "referenceName": "[variables('SADS')]",
                      "type": "DatasetReference",
                      "parameters": {
                        "sinkfilename": {
                          "value": "@{item().table_name}.csv",
                          "type": "Expression"
                        }

                      }
                    }
                  ]
                }
              },
              {
                "name": "Copy",
                "type": "Copy",
                "dependsOn": [
                  {
                    "activity": "ImportSchema",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "DelimitedTextSource",
                    "storeSettings": {
                      "type": "AzureBlobStorageReadSetting",
                      "recursive": false,
                      "enablePartitionDiscovery": false
                    },
                    "formatSettings": {
                      "type": "DelimitedTextReadSetting"
                    }
                  },
                  "sink": {
                    "type": "AzureSqlSink"
                  },
                  "enableStaging": false
                },
                "inputs": [
                  {
                    "referenceName": "[variables('SADS')]",
                    "type": "DatasetReference",
                    "parameters": {
                      "sinkfilename": {
                        "value": "@{item().table_name}.csv",
                        "type": "Expression"
                      }
                    }
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('SQLDBDataset')]",
                    "type": "DatasetReference",
                    "parameters": {
                      "tablelist": {
                        "value": "dbo.[@{item().table_name}]",
                        "type": "Expression"
                      }
                    }
                  }
                ]
              }
            ]
        }
    }
    ],
    "parameters": {
    "Table": {
    "type": "array",
    "defaultValue": "[parameters('BlobTable')]"
    }
    },
    "annotations": []
    }
   },
        {
          "condition": "[equals(parameters('Sources'),'SAP')]",
          "type": "pipelines",
          "apiVersion": "[variables('api-version')]",
          "name": "IncrementalPipeline",
          "dependsOn": [
            "[parameters('DataFactoryName')]",
            "[variables('SAPLinkedService')]",
            "[variables('SAPDataSet')]",
            "[variables('SQLDBLinkedService')]",
            "[variables('SQLDBDateDS')]",
            "[variables('SQLDBMainDS')]",
            "[variables('SQLDBStagingDS')]",
            "[variables('SADSStaging')]",
            "[variables('SAPPipeline')]"
          ],
          "properties": {
            "folder": {
              "name": "Incremental_Pipeline"
            },
            "activities": [
              {
                "name": "Get_Latest_Date",
                "type": "Copy",
                "dependsOn": [],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "RelationalSource",
                    "query": {
                      "value": "SELECT MAX(\"ERDAT\") AS MAXINSERTIONDATE, MAX(\"AEDAT\") AS MAXUPDATEDATE FROM @{pipeline().parameters.IncrementalSource}",
                      "type": "Expression"
                    }
                  },
                  "sink": {
                    "type": "AzureSqlSink",
                    "preCopyScript": "DELETE FROM  Storageacc44"
                  },
                  "enableStaging": false
                },
                "inputs": [
                  {
                    "referenceName": "[variables('SAPDataSet')]",
                    "type": "DatasetReference"
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('SQLDBDateDS')]",
                    "type": "DatasetReference",
                    "parameters": {
                      "Date_Table": {
                        "value": "@{pipeline().parameters.DateTable}",
                        "type": "Expression"
                      }
                    }
                  }
                ]
              },
              {
                "name": "Lookup_the_date",
                "type": "Lookup",
                "dependsOn": [
                  {
                    "activity": "Get_Latest_Date",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30,
                  "secureOutput": false,
                  "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                  "source": {
                    "type": "AzureSqlSource"
                  },
                  "dataset": {
                    "referenceName": "[variables('SQLDBDateDS')]",
                    "type": "DatasetReference",
                    "parameters": {
                      "Date_Table": {
                        "value": "@{pipeline().parameters.DateTable}",
                        "type": "Expression"
                      }
                    }
                  },
                  "firstRowOnly": false
                }
              },
              {
                "name": "copy data using max date",
                "type": "ForEach",
                "dependsOn": [
                  {
                    "activity": "Lookup_the_date",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "userProperties": [],
                "typeProperties": {
                  "items": {
                    "value": "@activity('Lookup_the_date').output.value",
                    "type": "Expression"
                  },
                  "isSequential": true,
                  "activities": [
                    {
                      "name": "INSERT NEW RECORDS",
                      "type": "Copy",
                      "dependsOn": [],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "RelationalSource",
                          "query": {
                            "value": "SELECT * FROM @{pipeline().parameters.IncrementalSource} WHERE \"ERDAT\">=@{item().MAXINSERTIONDATE} and \"AEDAT\" = 00000000",
                            "type": "Expression"
                          }
                        },
                        "sink": {
                          "type": "AzureSqlSink"
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SalesForceDS')]",
                          "type": "DatasetReference"
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SQLDBMainDS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "Main_table": {
                              "value": "@{pipeline().parameters.IncrementalSink}",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "name": "Import_Schema_Staging",
                      "type": "WebActivity",
                      "dependsOn": [
                        {
                          "activity": "INSERT NEW RECORDS",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "url": "[parameters('AzureFunctionURL')]",
                        "method": "POST",
                        "body": {
                          "value": "{\n\"blob_con_string\":\"DefaultEndpointsProtocol=https;AccountName=scastoreaccount;AccountKey=vFOXuyfWpfobLZtrmBO3e9es5FDWIVfhPehU3GpVZ/6K3DKg4Ww7QgiwfIUeue+0MXWgu4mR4UH8n9CUUcIcyg==;EndpointSuffix=core.windows.net\",\n\"sql_con_string\":\"Server=tcp:scasql-server.database.windows.net,1433;Initial Catalog=sca-db;Persist Security Info=False;User ID=celebal;Password=password@123;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;\",\n \"filename\": \"@{pipeline().parameters.IncrementalSink}.csv\",\n \"containerName\": \"marketplace\",\n \"tablename\": \"@{pipeline().parameters.StagingTable}\"\n}",
                          "type": "Expression"
                        },
                        "datasets": [
                          {
                            "referenceName": "[variables('SADSStaging')]",
                            "type": "DatasetReference",
                            "parameters": {
                              "Staging_Blob": {
                                "value": "@{pipeline().parameters.IncrementalSink}.csv",
                                "type": "Expression"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "INSERT UPDATED RECORDS IN STAGING",
                      "type": "Copy",
                      "dependsOn": [
                        {
                          "activity": "Import_Schema_Staging",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "RelationalSource",
                          "query": {
                            "value": "SELECT *\nFROM @{pipeline().parameters.IncrementalSource} WHERE \"AEDAT\">=@{item().MAXUPDATEDATE}",
                            "type": "Expression"
                          }
                        },
                        "sink": {
                          "type": "AzureSqlSink"
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SalesForceDS')]",
                          "type": "DatasetReference"
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SQLDBStagingDS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "Staging_Table": {
                              "type": "Expression",
                              "value": "@{pipeline().parameters.StagingTable}"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "name": "INSERT UPDATED RECORDS TO MAIN TABLE",
                      "type": "Copy",
                      "dependsOn": [
                        {
                          "activity": "INSERT UPDATED RECORDS IN STAGING",
                          "dependencyConditions": [
                            "Succeeded"
                          ]
                        }
                      ],
                      "policy": {
                        "timeout": "7.00:00:00",
                        "retry": 0,
                        "retryIntervalInSeconds": 30,
                        "secureOutput": false,
                        "secureInput": false
                      },
                      "userProperties": [],
                      "typeProperties": {
                        "source": {
                          "type": "AzureSqlSource"
                        },
                        "sink": {
                          "type": "AzureSqlSink"
                        },
                        "enableStaging": false
                      },
                      "inputs": [
                        {
                          "referenceName": "[variables('SQLDBStagingDS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "Staging_Table": {
                              "type": "Expression",
                              "value": "@{pipeline().parameters.StagingTable}"
                            }
                          }
                        }
                      ],
                      "outputs": [
                        {
                          "referenceName": "[variables('SQLDBMainDS')]",
                          "type": "DatasetReference",
                          "parameters": {
                            "Maintable": {
                              "value": "@{pipeline().parameters.IncrementalSink}",
                              "type": "Expression"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }

            ],
            "parameters": {
              "IncrementalSource": {
                "type": "string",
                "defaultValue": "\"SAPHANADB\".\"VBAK\""
              },
              "IncrementalSink": {
                "type": "string",
                "defaultValue": "SAPHANADB_VBAK"
              },
              "StagingTable": {
                "type": "string",
                "defaultValue": "staging44"
              },
              "DateTable": {
                "type": "string",
                "defaultValue": "maxdate"
              }
            },
            "annotations": []
          }
        }
      ]
    }
  ],

  "outputs": {


  }

}

